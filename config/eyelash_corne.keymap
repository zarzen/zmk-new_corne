#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "MAC";
            bindings = <
&none  &kp Q               &kp W       &kp E        &kp R       &kp T                              &kp UP                &kp Y      &kp U       &kp I        &kp O           &kp P      &none
&none  &kp A               &ht LALT S  &ht LCTRL D  &ht LGUI F  &kp G                    &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &ht RGUI J  &ht RCTRL K  &ht LEFT_ALT L  &kp BSPC   &none
&none  &ht LEFT_COMMAND Z  &kp X       &kp C        &kp V       &kp B       &kp SPACE              &kp DOWN              &kp N      &kp M       &kp COMMA    &kp DOT         &kp ENTER  &none
                                       &kp LGUI     &lt 3 TAB   &kp LSHIFT                                               &kp SPACE  &lt 2 TAB   &kp ESC
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        win_keymap {
            display-name = "WIN";
            bindings = <
&none  &kp Q        &kp W       &kp E               &kp R        &kp T                              &kp UP                &kp Y      &kp U        &kp I                &kp O           &kp P      &none
&none  &kp A        &ht LALT S  &ht LEFT_COMMAND D  &ht LCTRL F  &kp G                    &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &ht RCTRL J  &ht RIGHT_COMMAND K  &ht LEFT_ALT L  &kp BSPC   &none
&none  &ht LCTRL Z  &kp X       &kp C               &kp V        &kp B       &kp SPACE              &kp DOWN              &kp N      &kp M        &kp COMMA            &kp DOT         &kp ENTER  &none
                                &kp LCTRL           &lt 3 TAB    &kp LSHIFT                                               &kp SPACE  &lt 2 TAB    &kp ESC
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1           &kp N2          &kp N3           &kp N4           &kp N5                                         &mmv MOVE_UP                     &kp N6    &kp N7     &kp N8     &kp N9     &kp N0       &trans
&trans  &trans           &trans          &trans           &trans           &trans                         &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans       &trans
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &bootloader  &none
                                         &trans           &trans           &kp ESC                                                                         &trans    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT                                &mmv MOVE_UP                     &kp CARET  &kp AMPS        &kp ASTRK  &kp GRAVE  &kp TILDE     &none
&trans  &kp DQT   &kp LBKT  &kp LBRC  &kp LPAR  &kp BACKSPACE            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp FSLH   &kp MINUS       &kp EQUAL  &kp COLON  &kp SEMI      &none
&trans  &kp SQT   &kp RBKT  &kp RBRC  &kp RPAR  &kp ENTER      &trans                    &mmv MOVE_DOWN                   &kp BSLH   &kp UNDERSCORE  &kp PLUS   &kp PIPE   &kp QUESTION  &none
                            &trans    &trans    &kp ESC                                                                   &trans     &trans          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1  &kp F2   &kp F3   &kp F4   &bt BT_SEL 0                                  &mmv MOVE_UP                     &bt BT_SEL 2  &out OUT_TOG  &tog 1          &kp K_MUTE       &kp C_PREV  &none
&trans          &kp F5  &kp F6   &kp F7   &kp F8   &bt BT_SEL 1                  &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bt BT_SEL 3  &kp C_BRI_UP  &studio_unlock  &kp C_VOLUME_UP  &kp C_PP    &none
&trans          &kp F9  &kp F10  &kp F11  &kp F12  &bt BT_CLR_ALL  &kp C_MUTE                    &mmv MOVE_DOWN                   &tog 0        &kp C_BRI_DN  &bootloader     &kp C_VOL_DN     &kp C_NEXT  &none
                                 &trans   &trans   &trans                                                                         &trans        &trans        &sys_reset
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        fn_layer_tri {
            if-layers = <2 3>;
            then-layer = <4>;
        };

        switch {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
